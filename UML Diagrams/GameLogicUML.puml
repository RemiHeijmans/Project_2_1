@startuml
class GameLogic {
    - CheckersApp app
    - Agent agent
    - Agent opponent
    - GameState g
    + GameLogic(CheckersApp app)
    + GameLogic(CheckersApp app, Agent agent)
    + GameLogic(CheckersApp app, Agent agent1, Agent agent2)
    + boolean isGameOver(GameState board)
    + Tile[][] getBoard()
    + void restartGame()
    + void takeTurn(Turn turn)
    + boolean takeMove(Move move)
    - void movePiece(Move move)
}

class GameState {
    - Tile[][] board
    - boolean isWhiteTurn
    - ArrayList<Piece> whitePieces
    - ArrayList<Piece> blackPieces
    - boolean isGameOver
    + GameState()
    + Tile[][] getBoard()
    + void switchTurn()
    + boolean isGameOver()
    + List<Piece> getAllPieces()
    + boolean move(Move move)
    + boolean undoMove(Move move)
}

class Tile {
    - TileDrawer tileDrawer
    - boolean isBlack
    - Piece piece
    - int x, y
    + Tile(int x, int y)
    + boolean hasPiece()
    + Piece getPiece()
    + void setPiece(Piece piece)
}

GameLogic --> GameState
GameState --> Tile
GameState --> Piece
@enduml


